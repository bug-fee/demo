server:
  #服务端口7900
  port: 8070

spring:
  jpa:
    ##不生成ddl语句
    generate-ddl: true
    ##显示sql
    show-sql: true
    ##jpa依赖于hibernate
    hibernate:
      ##每次运行程序，没有表格会新建表格，表内有数据不会清空，只会更新
      ddl-auto: update
  datasource:
    ##使用h2数据库
    platform: h2
    ##初始化表结构
    schema: classpath:schema/schema.sql
    ##初始化数据
    data: classpath:schema/data.sql
  application:
    ##应用名称建议全使用小写
    ##在eureka应用中配置eureka.instance.name与application.name作用一致
    name: microservice-provider-user
logging:
  ##日志级别
  level:
    ##根级别显示info
    root: INFO
    ##下面三行表显示sql并把参数打印出来
    org.hibernate: INFO
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    org.hibernate.type.descriptor.sql.BasicExtractor: TRACE
    ##application下显示DEBUG
    com.wonders: DEBUG
eureka:
  client:
    healthcheck:
      #使用health端点来代替心跳表明服务是否可用，反应到eureka server ui上服务是的UP还是DOWN
      enabled: true
    serviceUrl:
      ##支持并连接Ureka服务端
      defaultZone: http://user:password123@localhost:8761/eureka
  instance:
    ##使用IP地址做为服务提供路径。默认使用主机名称访问
    prefer-ip-address: true
    ##使用“应用名称：实例IE：端口号”的组合显示实例ID
    instance-id: ${spring.application.name}:${spring.application.instance_id:${server.port}}
    ##自定义eureka服务列表中的应用名称：为了填坑(swagger框架与springCloud不太兼容，使用该配置项可以可以避免服务名称为unknown)
    ##该名称定义了eureka中服务名称的VIP 如果不配置此项，则默认使用spring.application.name
    appname: microservice-provider-user

##配置actuator监控系统健康情况
management:
  endpoints:
    web:
      exposure:
        ##测试环境下暴露所有端点(暴露/health等路径，系统健康信息等全部暴露不太安全)  * 在yaml 文件属于关键字，所以需要加引号
        include: "*"